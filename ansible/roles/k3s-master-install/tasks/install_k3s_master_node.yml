- name: Install K3s master node
  shell: |
    curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="{{ INSTALL_K3S_EXEC_VARS }}" sh -
  args:
    executable: /bin/bash
  when:
    - inventory_hostname in groups['k3sMaster']
    - "'k3s' not in services"

- name: Get k3s token from master node
  shell: sudo cat /var/lib/rancher/k3s/server/node-token
  register: k3s_token_result
  run_once: true  # Ensures this command only runs once
  when: inventory_hostname in groups['k3sMaster']

- name: Set k3s token as fact
  set_fact:
    k3s_token: "{{ k3s_token_result.stdout }}"
  when: inventory_hostname in groups['k3sMaster']

- name: Fetch k3s.yaml from master
  ansible.builtin.slurp:
    src: /etc/rancher/k3s/k3s.yaml
  register: k3s_config_content
  when: inventory_hostname in groups['k3sMaster']

- name: Debug k3s_config_content 
  ansible.builtin.debug:
    var: k3s_config_content

- name: Decode the k3s.yaml content
  set_fact:
    k3s_config_decoded: "{{ k3s_config_content['content'] | b64decode }}"
  when: 
    - inventory_hostname in groups['k3sMaster']
    - k3s_config_content is defined

- name: Load k3s_config_decoded into a dictionary
  set_fact:
    k3s_config_dict: "{{ k3s_config_decoded | from_yaml }}"
  when: 
    - inventory_hostname in groups['k3sMaster']
    - k3s_config_decoded is defined

- name: Replace server URL in the k3s config dictionary
  set_fact:
    k3s_config_dict_modified: >-
      {% for cluster in k3s_config_dict.clusters %}
      {% if cluster.name == 'default' %}
      {% set _ = cluster.cluster.update({'server': 'https://' + ansible_host + ':6443'}) %}
      {% endif %}
      {% endfor %}
      {{ k3s_config_dict }}
  when: 
    - inventory_hostname in groups['k3sMaster']
    - k3s_config_decoded is defined

- name: Convert modified k3s config back to YAML string
  set_fact:
    modified_k3s_config: "{{ k3s_config_dict_modified | to_yaml }}"
  when:
    - inventory_hostname in groups['k3sMaster']
    - k3s_config_decoded is defined

- name: Debug print k3s_config_decoded 
  ansible.builtin.debug:
    var: k3s_config_decoded

- name: Debug print modified_k3s_config 
  ansible.builtin.debug:
    var: modified_k3s_config


